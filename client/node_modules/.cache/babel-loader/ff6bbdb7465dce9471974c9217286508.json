{"ast":null,"code":"import _objectSpread from \"/Users/guane/Work/study/todoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/guane/Work/study/todoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as actions from \"../actions/index\"; // import {ADD, REMOVE, TOGGLE} from '../actions/index';\n\nvar todoReducer = function todoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actions.ADD:\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        title: action.title,\n        isDone: false\n      }]);\n\n    case actions.REMOVE:\n      return state.filter(function (todo) {\n        return todo.id !== action.id;\n      });\n\n    case actions.TOGGLE:\n      // Change data: must return a new object, only update a property does not trigger re-rendering\n      return state.map(function (todo) {\n        return todo.id === action.id ? _objectSpread({}, todo, {\n          isDone: !todo.isDone\n        }) : todo;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["/Users/guane/Work/study/todoApp/src/reducers/todoReducer.js"],"names":["actions","todoReducer","state","action","type","ADD","id","title","isDone","REMOVE","filter","todo","TOGGLE","map"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,kBAAzB,C,CACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAsB;AAAA,MAArBC,KAAqB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,OAAO,CAACK,GAAb;AACI,0CAAWH,KAAX,IAAkB;AAACI,QAAAA,EAAE,EAAGH,MAAM,CAACG,EAAb;AAAiBC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAA/B;AAAsCC,QAAAA,MAAM,EAAC;AAA7C,OAAlB;;AACJ,SAAKR,OAAO,CAACS,MAAb;AACI,aAAOP,KAAK,CAACQ,MAAN,CAAc,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAAvB;AAAA,OAAlB,CAAP;;AACJ,SAAKN,OAAO,CAACY,MAAb;AACI;AACA,aAAOV,KAAK,CAACW,GAAN,CAAU,UAAAF,IAAI;AAAA,eACjBA,IAAI,CAACL,EAAL,KAAYH,MAAM,CAACG,EAAnB,qBAA4BK,IAA5B;AAAkCH,UAAAA,MAAM,EAAC,CAACG,IAAI,CAACH;AAA/C,aAAyDG,IADxC;AAAA,OAAd,CAAP;;AAGJ;AACI,aAAOT,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import * as actions from \"../actions/index\";\n// import {ADD, REMOVE, TOGGLE} from '../actions/index';\n\nconst todoReducer = (state=[], action) => {\n    switch(action.type){\n        case actions.ADD : \n            return [...state, {id : action.id, title: action.title, isDone:false}];\n        case actions.REMOVE :\n            return state.filter( todo => todo.id !== action.id);\n        case actions.TOGGLE :\n            // Change data: must return a new object, only update a property does not trigger re-rendering\n            return state.map(todo => \n                todo.id === action.id ? {...todo, isDone:!todo.isDone} : todo\n            );\n        default :\n            return state;\n    }\n}\n\nexport default todoReducer;"]},"metadata":{},"sourceType":"module"}